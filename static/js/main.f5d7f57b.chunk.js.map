{"version":3,"sources":["store/Scenes/constants.ts","reportWebVitals.ts","store/Scenes/store.ts","store/Scenes/reducers.ts","store/reducers.ts","store/store.ts","store/index.ts","assets/models/cargo-ship/icon.jpg","scenes/GeneralScene.tsx","assets/models/cargo-ship/carg_ship_in_route.glb","scenes/CargoShipInRouteScene/index.ts","scenes/CargoShipInRouteScene/CargoShipInRouteScene.tsx","scenes/CargoShipInRouteScene/lights.ts","assets/models/cargo-ship/limited_manouverability_moving_icon.jpg","assets/models/cargo-ship/carg_ship_limited_manouverability_moving.glb","scenes/LimitedManouverabilityMovingScene/index.ts","scenes/LimitedManouverabilityMovingScene/LimitedManouverabilityMovingScene.tsx","scenes/LimitedManouverabilityMovingScene/lights.ts","assets/models/cargo-ship/limited_manouverability_not_moving_icon.jpg","assets/models/cargo-ship/carg_ship_limited_manouverability_stationary.glb","scenes/LimitedManouverabilityStationaryScene/index.ts","scenes/LimitedManouverabilityStationaryScene/LimitedManouverabilityStationaryScene.tsx","scenes/LimitedManouverabilityStationaryScene/lights.ts","assets/models/cargo-ship/not_responsible_moving_icon.jpg","assets/models/cargo-ship/carg_ship_not_responsible_moving.glb","scenes/NotResponsibleMovingScene/index.ts","scenes/NotResponsibleMovingScene/NotResponsibleMovingScene.tsx","scenes/NotResponsibleMovingScene/lights.ts","assets/models/cargo-ship/not_responsible_not_moving_icon.jpg","assets/models/cargo-ship/carg_ship_not_responsible_stationary.glb","scenes/NotResponsibleStationaryScene/index.ts","scenes/NotResponsibleStationaryScene/NotResponsibleStationaryScene.tsx","scenes/NotResponsibleStationaryScene/lights.ts","assets/models/sailboat-motor/icon.jpg","assets/models/sailboat-motor/sailboat_motor.glb","scenes/SailboatMotorScene/index.ts","scenes/SailboatMotorScene/SailboatMotorScene.tsx","scenes/SailboatMotorScene/lights.ts","scenes/index.ts","store/Scenes/actions.ts","assets/Real Stars Skybox/px.png","assets/Real Stars Skybox/nx.png","assets/Real Stars Skybox/py.png","assets/Real Stars Skybox/ny.png","assets/Real Stars Skybox/pz.png","assets/Real Stars Skybox/nz.png","store/Scenes/selectors.ts","assets/waternormals.jpg","components/WaterReplacer/Water3D.ts","components/WaterReplacer/WaterReplacer.tsx","assets/undraw_No_data_re_kwbl.svg","scenes/ThreeHooks/lightsDescriptor.ts","scenes/SceneBase.tsx","scenes/ThreeHooks/useAngleLimitedLights.ts","scenes/directedAngle.ts","components/Canvas.tsx","components/Checkbox.tsx","components/Controls/parts.ts","components/Controls/Controls.tsx","views/SceneView/parts.ts","components/Loader.tsx","views/SceneView/SceneLoader.tsx","views/SceneView/SceneView.tsx","utils/hooks/useQueryParams.ts","appConstants.ts","components/InvisibleLink.ts","views/ListView/parts.ts","views/ListView/ListView.tsx","utils/withDefault.ts","views/ControlsView/parts.ts","views/ControlsView/ControlsView.tsx","App.tsx","index.tsx"],"names":["SceneActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialScenesState","params","isNight","angle","Math","PI","cameraHeight","distance","backgroundEnabled","freeCameraEnabled","scenesReducer","state","action","type","loadScene","sceneDesc","scene","updateParams","produce","draft","Object","assign","createRootReducer","history","withReduxStateSync","combineReducers","router","connectRouter","currentScene","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","config","whitelist","prepareState","createBrowserHistory","store","createStore","applyMiddleware","routerMiddleware","createStateSyncMiddleware","initStateWithPrevTab","GeneralScene","sceneFilePath","shipObjectName","waterObjectName","camera","useThree","x","gltf","useLoader","GLTFLoader","target","getObjectByName","position","useEffect","water","Mesh","material","side","DoubleSide","lookAt","name","object","descriptor","id","iconPath","component","cargoShip","lightsDescriptor","angleLimitedLights","Burtowe_lewe","angleRelativeTo","minVisibilityAngleDeg","maxVisibilityAngleDeg","Burtowe_prawe","Masztowe_rufa","Rufowe","motorBoatPath","Topowe","sceneMap","Map","CargoShipDescriptor","LimitedMovingDescriptor","LimitedStatDescriptor","NotRespMovingDescriptor","NotRespStatDescriptor","SailboatMotorDescriptor","updateSceneParams","currentSceneParams","currentSceneDesc","Water3D","geometry","options","ShaderMaterial","onBeforeCompile","shader","defines","HAS_WAVES","waves","length","WAVE_COUNT","uniforms","value","vertexShader","customProgramCacheKey","toString","Water","extend","_path","_path2","_path3","_circle","_circle2","_path4","_path5","_path6","_circle3","_circle4","defaultWaterConfig","textureWidth","textureHeight","sunDirection","Vector3","sunColor","waterColor","distortionScale","fog","direction","Vector2","steepness","wavelength","waterGeometry","PlaneGeometry","WaterReplacer","placeholderName","waterNormalsPath","waterNormals","rest","ref","useRef","s","TextureLoader","defaultWaterNormalsPath","placeholder","console","log","useLayoutEffect","visible","current","copy","rotation","rotateX","wrapS","RepeatWrapping","wrapT","useMemo","useFrame","_","delta","time","Fragment","args","emptyDescriptor","SceneBase","sceneId","children","dispatch","useDispatch","useSelector","model","lights","res","lightNames","keys","traverse","obj","names","filter","lightName","startsWith","MeshStandardMaterial","push","light","userData","warn","a","b","cameraPos","getWorldPosition","relativeTo","limits","pos","setY","getWorldDirection","applyAxisAngle","clone","sub","atan2","z","minAngle","degToRad","maxAngle","useAngleLimitedLights","get","dir","len","multiplyScalar","y","handleCameraMovement","useCallback","debounce","angleTo","depthBuffer","autoClear","disableNormalPass","luminanceThreshold","luminanceSmoothing","Environment","files","starsPx","starsNx","starsPy","starsNy","starsPz","starsNz","background","Sky","scale","inclination","rayleigh","mieCoefficient","azimuth","turbidity","intensity","OrbitControls","enablePan","enableDamping","rotateSpeed","maxPolarAngle","minDistance","maxDistance","onChange","Canvas","props","ContextBridge","useContextBridge","ReactReduxContext","Checkbox","checked","Button","active","variant","ButtonBase","styled","DayButton","NightButton","FormContentWrapper","div","Controls","className","Form","Label","ButtonGroup","onClick","title","htmlFor","Control","min","max","step","radToDeg","e","disabled","round","Wrapper","DrawerHandle","ControlsDrawer","handleHeight","open","css","OriginalControls","OriginalHtml","ChildrenWrapper","AnimationWrapper","Box","delay","Loader","Array","fill","map","i","floor","SceneLoader","useProgress","progress","Html","center","toFixed","ProgressBar","now","SceneView","useParams","useState","areControlsOpen","setAreControlsOpen","queryParams","URLSearchParams","useLocation","search","has","to","Model","React","aspect","near","far","gl","logarithmicDepthBuffer","fallback","_extends","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUndrawNoDataReKwbl","_ref","svgRef","titleId","xmlns","width","height","viewBox","d","transform","cx","cy","r","ForwardRef","InvisibleLink","Link","Header","header","SearchInput","input","CardsWrapper","NoResultsWrapper","NoResultsIcon","ReactComponent","HorizontalCardBody","OriginalCard","Body","WholeCardLink","CardStyleWrapper","InnerLink","ListView","searchText","setSearchText","inputRef","onKeyPress","document","activeElement","addEventListener","removeEventListener","arr","def","openSceneInNewWindow","preventDefault","screen","availHeight","availWidth","from","values","toLowerCase","includes","trim","Card","Img","src","Text","ControlsView","desc","App","path","Views","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5d7f57b.chunk.js","sourcesContent":["import { SceneDescriptor } from 'scenes/sceneDescriptor';\r\nimport { SceneParams, SceneState } from './store';\r\n\r\nexport enum SceneActionType {\r\n    loadScene = 'scenes/LOAD',\r\n    updateParams = 'scenes/UPDATE_PARAMS',\r\n    updateLightSet = 'scenes/UPDATE_LIGHT_SET',\r\n}\r\n\r\nexport type SceneAction = {\r\n    type: SceneActionType.loadScene;\r\n    scene: SceneDescriptor;\r\n} | {\r\n    type: SceneActionType.updateParams;\r\n    params: Partial<SceneParams>;\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { SceneDescriptor } from 'scenes/sceneDescriptor';\r\n\r\n// TODO: Figure out how to implement scene-specific settings\r\nexport interface SceneParams {\r\n    isNight: boolean;\r\n    angle: number;\r\n    cameraHeight: number;\r\n    distance: number;\r\n    freeCameraEnabled: boolean;\r\n    backgroundEnabled: boolean;\r\n}\r\n\r\nexport type CurrentScene = Omit<SceneDescriptor, 'component'>;\r\n\r\nexport interface SceneState {\r\n    params: SceneParams;\r\n    sceneDesc?: CurrentScene;\r\n}\r\n\r\nexport const initialSceneParams: SceneParams = {\r\n    isNight: true,\r\n    angle: Math.PI / 3,\r\n    cameraHeight: 5,\r\n    distance: 200,\r\n    backgroundEnabled: true,\r\n    freeCameraEnabled: true,\r\n};\r\n\r\nexport const initialScenesState: SceneState = {\r\n    params: initialSceneParams,\r\n};\r\n","import produce from 'immer';\r\nimport { Reducer } from 'redux';\r\nimport { SceneAction, SceneActionType } from './constants';\r\nimport { initialScenesState, SceneState } from './store';\r\n\r\nexport const scenesReducer: Reducer<SceneState, SceneAction> = (\r\n    state = initialScenesState,\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case SceneActionType.loadScene:\r\n            return {\r\n                ...initialScenesState,\r\n                sceneDesc: {\r\n                    ...action.scene,\r\n                },\r\n            };\r\n\r\n        case SceneActionType.updateParams:\r\n            return produce(state, draft => {\r\n                Object.assign(draft.params, action.params);\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { History } from 'history';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport { withReduxStateSync } from 'redux-state-sync';\r\nimport { AppState } from './constants';\r\nimport { scenesReducer } from './Scenes/reducers';\r\n\r\nconst createRootReducer = (history: History) => withReduxStateSync(\r\n    combineReducers<AppState>({\r\n        router: connectRouter(history),\r\n        currentScene: scenesReducer,\r\n    }),\r\n);\r\n\r\nexport default createRootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { Config, createStateSyncMiddleware, initStateWithPrevTab } from 'redux-state-sync';\r\nimport createRootReducer from './reducers';\r\nimport { SceneActionType } from './Scenes/constants';\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst config: Config = {\r\n    // predicate: action => !(action.type as string).startsWith('@@router'),\r\n    whitelist: [SceneActionType.updateParams],\r\n    prepareState: ({ router, ...state }) => state,\r\n};\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport const store = createStore(\r\n    createRootReducer(history),\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            routerMiddleware(history),\r\n            createStateSyncMiddleware(config),\r\n        ),\r\n    ),\r\n);\r\n\r\ninitStateWithPrevTab(store);\r\n","import { store } from './store';\r\n\r\nexport type { AppState } from './constants';\r\nexport type { PickAction } from './utils';\r\n\r\nexport { history } from './store';\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/icon.1277d057.jpg\";","import { useLoader, useThree } from '@react-three/fiber';\nimport React, { useEffect } from 'react';\nimport { DoubleSide, Mesh, MeshBasicMaterial } from 'three';\nimport { GLTFLoader } from 'three-stdlib';\n\nexport interface GeneralSceneProps {\n    sceneFilePath: string;\n    shipObjectName?: string;\n    waterObjectName?: string;\n}\n\nexport const GeneralScene: React.FC<GeneralSceneProps> = ({\n    sceneFilePath,\n    shipObjectName = 'Statek',\n    waterObjectName = 'Woda',\n}) => {\n    const camera = useThree(x => x.camera);\n    const gltf = useLoader(GLTFLoader, sceneFilePath);\n\n    const target = gltf.scene.getObjectByName(shipObjectName)?.position ?? gltf.scene.position;\n\n    useEffect(() => {\n        const water = gltf.scene.getObjectByName(waterObjectName);\n\n        if (water instanceof Mesh)\n            (water.material as MeshBasicMaterial).side = DoubleSide;\n\n        camera.lookAt(target);\n    }, [camera, target, gltf, shipObjectName, waterObjectName]);\n\n    return (\n        <primitive name=\"Loaded scene\" object={gltf.scene} />\n    );\n};\n","export default __webpack_public_path__ + \"static/media/carg_ship_in_route.0af59b4f.glb\";","import iconPath from 'assets/models/cargo-ship/icon.jpg';\r\nimport lightsDescriptor from './lights';\r\nimport { CargoShipInRouteScene } from './CargoShipInRouteScene';\r\nimport { SceneDescriptor } from '../sceneDescriptor';\r\n\r\nexport const descriptor: SceneDescriptor = {\r\n    name: 'Statek o długości powyżej 50m o napędzie mechanicznym w drodze',\r\n    id: 'over-50m-in-route',\r\n    iconPath,\r\n    component: CargoShipInRouteScene,\r\n    lightsDescriptor,\r\n};\r\n","import React from 'react';\r\nimport { GeneralScene } from 'scenes/GeneralScene';\r\nimport cargoShip from 'assets/models/cargo-ship/carg_ship_in_route.glb';\r\n\r\nexport const CargoShipInRouteScene: React.FC = () => <GeneralScene sceneFilePath={cargoShip} />;\r\n","import { LightsDescriptor } from 'scenes/ThreeHooks/lightsDescriptor';\r\n\r\nexport default {\r\n    angleLimitedLights: {\r\n        Burtowe_lewe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Burtowe_prawe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 5,\r\n        },\r\n        Masztowe_rufa: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Rufowe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: 112.5,\r\n            maxVisibilityAngleDeg: -112.5,\r\n        },\r\n    },\r\n} as LightsDescriptor;\r\n","export default __webpack_public_path__ + \"static/media/limited_manouverability_moving_icon.08d67711.jpg\";","export default __webpack_public_path__ + \"static/media/carg_ship_limited_manouverability_moving.aa0e76a4.glb\";","import iconPath from 'assets/models/cargo-ship/limited_manouverability_moving_icon.jpg';\r\nimport lightsDescriptor from './lights';\r\nimport { LimitedManouverabilityMovingScene } from './LimitedManouverabilityMovingScene';\r\nimport { SceneDescriptor } from '../sceneDescriptor';\r\n\r\nexport const descriptor: SceneDescriptor = {\r\n    name: 'Statek o ograniczonej zdolności manewrowej, gdy posuwa się po wodzie',\r\n    id: 'limited-manouverability-moving',\r\n    iconPath,\r\n    component: LimitedManouverabilityMovingScene,\r\n    lightsDescriptor,\r\n};\r\n","import React from 'react';\r\nimport { GeneralScene } from 'scenes/GeneralScene';\r\nimport cargoShip from 'assets/models/cargo-ship/carg_ship_limited_manouverability_moving.glb';\r\n\r\nexport const LimitedManouverabilityMovingScene: React.FC = () => <GeneralScene sceneFilePath={cargoShip} />;\r\n","import { LightsDescriptor } from 'scenes/ThreeHooks/lightsDescriptor';\r\n\r\nexport default {\r\n    angleLimitedLights: {\r\n        Burtowe_lewe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Burtowe_prawe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 5,\r\n        },\r\n        Masztowe_rufa: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Rufowe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: 112.5,\r\n            maxVisibilityAngleDeg: -112.5,\r\n        },\r\n    },\r\n} as LightsDescriptor;\r\n","export default __webpack_public_path__ + \"static/media/limited_manouverability_not_moving_icon.2d9e2d4c.jpg\";","export default __webpack_public_path__ + \"static/media/carg_ship_limited_manouverability_stationary.a54e5b88.glb\";","import iconPath from 'assets/models/cargo-ship/limited_manouverability_not_moving_icon.jpg';\r\nimport lightsDescriptor from './lights';\r\nimport { LimitedManouverabilityStationaryScene } from './LimitedManouverabilityStationaryScene';\r\nimport { SceneDescriptor } from '../sceneDescriptor';\r\n\r\nexport const descriptor: SceneDescriptor = {\r\n    name: 'Statek o ograniczonej zdolności manewrowej, gdy nie posuwa się po wodzie',\r\n    id: 'limited-manouverability-stationary',\r\n    iconPath,\r\n    component: LimitedManouverabilityStationaryScene,\r\n    lightsDescriptor,\r\n};\r\n","import React from 'react';\r\nimport { GeneralScene } from 'scenes/GeneralScene';\r\nimport cargoShip from 'assets/models/cargo-ship/carg_ship_limited_manouverability_stationary.glb';\r\n\r\nexport const LimitedManouverabilityStationaryScene: React.FC = () => <GeneralScene sceneFilePath={cargoShip} />;\r\n","import { LightsDescriptor } from 'scenes/ThreeHooks/lightsDescriptor';\r\n\r\nexport default {\r\n    angleLimitedLights: {},\r\n} as LightsDescriptor;\r\n","export default __webpack_public_path__ + \"static/media/not_responsible_moving_icon.133d2395.jpg\";","export default __webpack_public_path__ + \"static/media/carg_ship_not_responsible_moving.db6017f9.glb\";","import iconPath from 'assets/models/cargo-ship/not_responsible_moving_icon.jpg';\r\nimport lightsDescriptor from './lights';\r\nimport { NotResponsibleMovingScene } from './NotResponsibleMovingScene';\r\nimport { SceneDescriptor } from '../sceneDescriptor';\r\n\r\nexport const descriptor: SceneDescriptor = {\r\n    name: 'Statek nie odpowiadający za swoje ruchy gdy, posuwa się po wodzie',\r\n    id: 'not-responsible-moving',\r\n    iconPath,\r\n    component: NotResponsibleMovingScene,\r\n    lightsDescriptor,\r\n};\r\n","import React from 'react';\r\nimport { GeneralScene } from 'scenes/GeneralScene';\r\nimport cargoShip from 'assets/models/cargo-ship/carg_ship_not_responsible_moving.glb';\r\n\r\nexport const NotResponsibleMovingScene: React.FC = () => <GeneralScene sceneFilePath={cargoShip} />;\r\n","import { LightsDescriptor } from 'scenes/ThreeHooks/lightsDescriptor';\r\n\r\nexport default {\r\n    angleLimitedLights: {\r\n        Burtowe_lewe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Burtowe_prawe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 5,\r\n        },\r\n        Masztowe_rufa: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Rufowe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: 112.5,\r\n            maxVisibilityAngleDeg: -112.5,\r\n        },\r\n    },\r\n} as LightsDescriptor;\r\n","export default __webpack_public_path__ + \"static/media/not_responsible_not_moving_icon.73e63082.jpg\";","export default __webpack_public_path__ + \"static/media/carg_ship_not_responsible_stationary.b0d98260.glb\";","import iconPath from 'assets/models/cargo-ship/not_responsible_not_moving_icon.jpg';\r\nimport lightsDescriptor from './lights';\r\nimport { NotResponsibleStationaryScene } from './NotResponsibleStationaryScene';\r\nimport { SceneDescriptor } from '../sceneDescriptor';\r\n\r\nexport const descriptor: SceneDescriptor = {\r\n    name: 'Statek nie odpowiadający za swoje ruchy, gdy nie posuwa się po wodzie',\r\n    id: 'not-responsible-stationary',\r\n    iconPath,\r\n    component: NotResponsibleStationaryScene,\r\n    lightsDescriptor,\r\n};\r\n","import React from 'react';\r\nimport { GeneralScene } from 'scenes/GeneralScene';\r\nimport cargoShip from 'assets/models/cargo-ship/carg_ship_not_responsible_stationary.glb';\r\n\r\nexport const NotResponsibleStationaryScene: React.FC = () => <GeneralScene sceneFilePath={cargoShip} />;\r\n","import { LightsDescriptor } from 'scenes/ThreeHooks/lightsDescriptor';\r\n\r\nexport default {\r\n    angleLimitedLights: {},\r\n} as LightsDescriptor;\r\n","export default __webpack_public_path__ + \"static/media/icon.4590771f.jpg\";","export default __webpack_public_path__ + \"static/media/sailboat_motor.d7568de3.glb\";","import iconPath from 'assets/models/sailboat-motor/icon.jpg';\r\nimport lightsDescriptor from './lights';\r\nimport { SailboatMotorScene } from './SailboatMotorScene';\r\nimport { SceneDescriptor } from '../sceneDescriptor';\r\n\r\nexport const descriptor: SceneDescriptor = {\r\n    name: 'Statek o długości powyżej 12m o napędzie mechanicznym w drodze',\r\n    id: 'over-12m-motor-in-route',\r\n    iconPath,\r\n    component: SailboatMotorScene,\r\n    lightsDescriptor,\r\n};\r\n","import React from 'react';\nimport { GeneralScene } from 'scenes/GeneralScene';\nimport motorBoatPath from 'assets/models/sailboat-motor/sailboat_motor.glb';\n\nexport const SailboatMotorScene: React.FC = () => (\n    <GeneralScene sceneFilePath={motorBoatPath} />\n);\n","import { LightsDescriptor } from 'scenes/ThreeHooks/lightsDescriptor';\r\n\r\nexport default {\r\n    angleLimitedLights: {\r\n        Burtowe_lewe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Burtowe_prawe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 5,\r\n        },\r\n        Topowe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: -112.5,\r\n            maxVisibilityAngleDeg: 112.5,\r\n        },\r\n        Rufowe: {\r\n            angleRelativeTo: 'Statek',\r\n            minVisibilityAngleDeg: 112.5,\r\n            maxVisibilityAngleDeg: -112.5,\r\n        },\r\n    },\r\n} as LightsDescriptor;\r\n","import { descriptor as CargoShipDescriptor } from './CargoShipInRouteScene';\r\nimport { descriptor as LimitedMovingDescriptor } from './LimitedManouverabilityMovingScene';\r\nimport { descriptor as LimitedStatDescriptor } from './LimitedManouverabilityStationaryScene';\r\nimport { descriptor as NotRespMovingDescriptor } from './NotResponsibleMovingScene';\r\nimport { descriptor as NotRespStatDescriptor } from './NotResponsibleStationaryScene';\r\nimport { descriptor as SailboatMotorDescriptor } from './SailboatMotorScene';\r\nimport { SceneDescriptor } from './sceneDescriptor';\r\n\r\nconst sceneMap = new Map<string, SceneDescriptor>([\r\n    [CargoShipDescriptor.id, CargoShipDescriptor],\r\n    [LimitedMovingDescriptor.id, LimitedMovingDescriptor],\r\n    [LimitedStatDescriptor.id, LimitedStatDescriptor],\r\n    [NotRespMovingDescriptor.id, NotRespMovingDescriptor],\r\n    [NotRespStatDescriptor.id, NotRespStatDescriptor],\r\n    [SailboatMotorDescriptor.id, SailboatMotorDescriptor],\r\n]);\r\n\r\nexport default sceneMap;\r\n","import sceneMap from 'scenes';\r\nimport { SceneDescriptor } from 'scenes/sceneDescriptor';\r\nimport { PickAction } from 'store/utils';\r\nimport { SceneAction, SceneActionType } from './constants';\r\nimport { SceneParams } from './store';\r\n\r\nexport const loadScene = (scene: SceneDescriptor): PickAction<SceneAction, SceneActionType.loadScene> => ({\r\n    type: SceneActionType.loadScene,\r\n    scene,\r\n});\r\n\r\nexport const updateSceneParams = (params: Partial<SceneParams>): PickAction<SceneAction, SceneActionType.updateParams> => ({\r\n    type: SceneActionType.updateParams,\r\n    params,\r\n});\r\n","export default __webpack_public_path__ + \"static/media/px.c9ee0dc7.png\";","export default __webpack_public_path__ + \"static/media/nx.c204bfbe.png\";","export default __webpack_public_path__ + \"static/media/py.c909086d.png\";","export default __webpack_public_path__ + \"static/media/ny.4228c3c0.png\";","export default __webpack_public_path__ + \"static/media/pz.01db6483.png\";","export default __webpack_public_path__ + \"static/media/nz.3e12838a.png\";","import { AppState } from 'store';\r\n\r\nexport const currentSceneParams = (state: AppState) => state.currentScene.params;\r\n\r\nexport const currentSceneDesc = (state: AppState) => state.currentScene.sceneDesc;\r\n","export default __webpack_public_path__ + \"static/media/waternormals.537ec85b.jpg\";","import { BufferGeometry, ShaderMaterial, Vector2 } from 'three';\r\nimport { Water, WaterOptions } from 'three-stdlib';\r\n\r\ninterface Wave {\r\n    steepness: number;\r\n    wavelength: number;\r\n    direction: Vector2;\r\n}\r\n\r\nexport interface Water3DOptions extends WaterOptions {\r\n    waves?: Wave[];\r\n}\r\n\r\nexport class Water3D extends Water {\r\n    constructor(geometry: BufferGeometry, options: Water3DOptions) {\r\n        super(geometry, options);\r\n\r\n        if (this.material instanceof ShaderMaterial) {\r\n            this.material.onBeforeCompile = shader => {\r\n                if (!(this.material instanceof ShaderMaterial))\r\n                    return;\r\n\r\n                this.material.defines.HAS_WAVES = (options.waves?.length ?? 0) > 0;\r\n                this.material.defines.WAVE_COUNT = options.waves?.length;\r\n\r\n                shader.uniforms.waves = {\r\n                    value: options.waves,\r\n                };\r\n\r\n                shader.vertexShader = /* glsl */`\r\n                uniform mat4 textureMatrix;\r\n                uniform float time;\r\n\r\n                varying vec4 mirrorCoord;\r\n                varying vec4 worldPosition;\r\n\r\n                #include <common>\r\n                #include <fog_pars_vertex>\r\n                #include <shadowmap_pars_vertex>\r\n                #include <logdepthbuf_pars_vertex>\r\n\r\n                #ifdef HAS_WAVES\r\n                struct Wave {\r\n                    float steepness;\r\n                    float wavelength;\r\n                    vec2 direction;\r\n                };\r\n\r\n                uniform Wave waves[WAVE_COUNT];\r\n\r\n                vec3 gerstnerWave (\r\n                    Wave wave,\r\n                    vec3 vertCoords,\r\n                    inout vec3 binormal,\r\n                    inout vec3 tangent\r\n                ) {\r\n                    float k = 2.0 * PI / wave.wavelength;\r\n                    float c = sqrt(9.8 / k);\r\n                    vec2 d = normalize(wave.direction);\r\n                    float f = k * (dot(d, vertCoords.xz) - c * time);\r\n                    float a = wave.steepness / k;\r\n\r\n                    //vertCoords.x += d.x * (a * cos(f));\r\n                    //vertCoords.y = a * sin(f);\r\n                    //vertCoords.z += d.y * (a * cos(f));\r\n\r\n                    tangent += vec3(\r\n                        -d.x * d.x * (wave.steepness * sin(f)),\r\n                        d.x * (wave.steepness * cos(f)),\r\n                        -d.x * d.y * (wave.steepness * sin(f))\r\n                    );\r\n\r\n                    binormal += vec3(\r\n                        -d.x * d.y * (wave.steepness * sin(f)),\r\n                        d.y * (wave.steepness * cos(f)),\r\n                        -d.y * d.y * (wave.steepness * sin(f))\r\n                    );\r\n\r\n                    return vec3(\r\n                        d.x * (a * cos(f)),\r\n                        a * sin(f),\r\n                        d.y * (a * cos(f))\r\n                    );\r\n                }\r\n\r\n                #endif\r\n\r\n                void main() {\r\n                    vec3 pos = vec3(position);\r\n                    vec3 objectNormal = vec3( normal );\r\n\r\n                    #ifdef USE_TANGENT\r\n                    vec3 objectTangent = vec3( tangent.xyz );\r\n                    #endif\r\n\r\n                    #ifdef HAS_WAVES\r\n                    vec3 wavesTangent = vec3(\r\n                    #   ifdef USE_TANGENT\r\n                        objectTangent\r\n                    #   else\r\n                        0.0, 0.0, 0.0\r\n                    #   endif\r\n                    );\r\n\r\n                    vec3 wavesBinormal = vec3(0.0, 0.0, 0.0);\r\n\r\n                    for (int i = 0; i < WAVE_COUNT; i++)\r\n                        pos += gerstnerWave(waves[i], position, wavesTangent, wavesBinormal);\r\n\r\n                    #ifdef USE_TANGENT\r\n                    objectTangent = wavesTangent;\r\n                    #endif\r\n\r\n                    objectNormal = normalize(cross(wavesBinormal, wavesTangent));\r\n                    #endif\r\n\r\n                    mirrorCoord = modelMatrix * vec4( pos, 1.0 );\r\n                    worldPosition = mirrorCoord.xyzw;\r\n                    mirrorCoord = textureMatrix * mirrorCoord;\r\n\r\n                    vec4 mvPosition =  modelViewMatrix * vec4( pos, 1.0 );\r\n                    gl_Position = projectionMatrix * mvPosition;\r\n\r\n                    vec3 transformedNormal = objectNormal;\r\n\r\n                    #ifdef USE_INSTANCING\r\n                    mat3 m = mat3( instanceMatrix );\r\n                    transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\r\n                    transformedNormal = m * transformedNormal;\r\n                    #endif\r\n\r\n                    transformedNormal = normalMatrix * transformedNormal;\r\n\r\n                    #ifdef FLIP_SIDED\r\n                    transformedNormal = - transformedNormal;\r\n                    #endif\r\n\r\n                    #ifdef USE_TANGENT\r\n                    vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\r\n\r\n                    #   ifdef FLIP_SIDED\r\n                    transformedTangent = - transformedTangent;\r\n                    #   endif\r\n                    #endif\r\n\r\n                    #include <logdepthbuf_vertex>\r\n                    #include <fog_vertex>\r\n                    #include <shadowmap_vertex>\r\n                }\r\n            `;\r\n            };\r\n\r\n            this.material.customProgramCacheKey = () => (options.waves?.length ?? 0).toString();\r\n        }\r\n    }\r\n}\r\n","import React, { useLayoutEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    extend,\r\n    Overwrite,\r\n    useFrame,\r\n    useLoader,\r\n    useThree,\r\n} from '@react-three/fiber';\r\nimport {\r\n    TextureLoader,\r\n    RepeatWrapping,\r\n    Vector3,\r\n    PlaneGeometry,\r\n    Vector2,\r\n    ShaderMaterial,\r\n} from 'three';\r\nimport { WaterOptions } from 'three-stdlib';\r\nimport defaultWaterNormalsPath from 'assets/waternormals.jpg';\r\nimport { Water3D, Water3DOptions } from './Water3D';\r\n\r\n// export const useWaterShader = (objName: string) => {\r\n//     const { scene } = useThree();\r\n//     const timeRef = useRef<IUniform<number> | undefined>();\r\n\r\n//     const waterNormals = useLoader(TextureLoader, waterNormalsPath);\r\n\r\n//     waterNormals.wrapS = RepeatWrapping;\r\n//     waterNormals.wrapT = RepeatWrapping;\r\n\r\n//     const waterPlane = scene.getObjectByName(objName);\r\n\r\n//     console.log(waterPlane);\r\n\r\n//     useEffect(() => {\r\n//         if (waterPlane instanceof Mesh) {\r\n//             console.log('New water');\r\n//             const water = new Water((waterPlane.geometry as BufferGeometry).clone(), {\r\n//                 textureWidth: 512,\r\n//                 textureHeight: 512,\r\n//                 waterNormals,\r\n//                 alpha: 1.0,\r\n//                 sunDirection: new Vector3(),\r\n//                 sunColor: 0xffffff,\r\n//                 waterColor: 0x023e8d,\r\n//                 distortionScale: 3.7,\r\n//                 fog: false,\r\n//             });\r\n\r\n//             waterPlane.material = water.material;\r\n//             timeRef.current = (waterPlane.material as ShaderMaterial).uniforms.time;\r\n//             (waterPlane.material as Material).side = DoubleSide;\r\n//         }\r\n//     }, [waterNormals, waterPlane]);\r\n\r\n//     useFrame((_, delta) => {\r\n//         if (timeRef.current)\r\n//             timeRef.current.value += delta;\r\n//     });\r\n// };\r\n\r\nextend({ Water3D });\r\n\r\ninterface WaterProps extends Partial<Overwrite<WaterOptions, { waterNormals: string }>> {\r\n    placeholderName: string;\r\n}\r\n\r\nconst defaultWaterConfig: Partial<Water3DOptions> = {\r\n    textureWidth: 512,\r\n    textureHeight: 512,\r\n    sunDirection: new Vector3(),\r\n    sunColor: 0xaaaaaa,\r\n    waterColor: 0x005896,\r\n    distortionScale: 3.7,\r\n    fog: false,\r\n    waves: [\r\n        {\r\n            direction: new Vector2(1, 0.8),\r\n            steepness: 0.1,\r\n            wavelength: 40,\r\n        },\r\n        {\r\n            direction: new Vector2(1, 0.6),\r\n            steepness: 0.05,\r\n            wavelength: 25,\r\n        },\r\n        {\r\n            direction: new Vector2(1, 1.3),\r\n            steepness: 0.025,\r\n            wavelength: 18,\r\n        },\r\n    ],\r\n};\r\n\r\n// TODO: add typing to <water>\r\ndeclare global {\r\n    // eslint-disable-next-line @typescript-eslint/no-namespace\r\n    namespace JSX {\r\n        interface IntrinsicElements {\r\n            water3D: any;\r\n        }\r\n    }\r\n}\r\n\r\nconst waterGeometry = new PlaneGeometry(1e4, 1e4, 1e3 / 4, 1e3 / 4);\r\n\r\nexport const WaterReplacer: React.FC<WaterProps> = ({ placeholderName, waterNormals: waterNormalsPath, ...rest }) => {\r\n    const ref = useRef<Water3D>();\r\n    const scene = useThree(s => s.scene);\r\n    const waterNormals = useLoader(TextureLoader, waterNormalsPath ?? defaultWaterNormalsPath);\r\n    const placeholder = scene.getObjectByName(placeholderName);\r\n\r\n    console.log(scene);\r\n\r\n    useLayoutEffect(() => {\r\n        if (placeholder)\r\n            placeholder.visible = false;\r\n\r\n        if (ref.current && placeholder) {\r\n            ref.current.position.copy(placeholder.position);\r\n            ref.current.rotation.copy(placeholder.rotation);\r\n            ref.current.rotateX(-Math.PI / 2);\r\n            // ref.current.material.transparent = true;\r\n        }\r\n\r\n        return () => {\r\n            if (placeholder)\r\n                placeholder.visible = true;\r\n        };\r\n    }, [placeholder]);\r\n\r\n    waterNormals.wrapS = RepeatWrapping;\r\n    waterNormals.wrapT = RepeatWrapping;\r\n\r\n    const config = useMemo(\r\n        () => ({\r\n            ...defaultWaterConfig,\r\n            ...rest,\r\n            waterNormals,\r\n        }),\r\n        [rest, waterNormals],\r\n    );\r\n\r\n    useFrame((_, delta) => {\r\n        if (ref.current?.material && ref.current?.material instanceof ShaderMaterial)\r\n            ref.current.material.uniforms.time.value += delta;\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <water3D ref={ref} args={[waterGeometry, config]} />\r\n            {/* <Plane\r\n                args={[1e4, 1e4, 1e3 / 4, 1e3 / 4]}\r\n                position={placeholder?.position && [placeholder.position.x, placeholder.position.y - 10, placeholder.position.z]}\r\n                rotation-x={-Math.PI / 2}\r\n            >\r\n                <meshPhongMaterial attach=\"material\" color=\"#000000\" />\r\n            </Plane> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","var _path, _path2, _path3, _circle, _circle2, _path4, _path5, _path6, _circle3, _circle4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUndrawNoDataReKwbl(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"b21613c9-2bf0-4d37-bef0-3b193d34fc5d\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 647.63626,\n    height: 632.17383,\n    viewBox: \"0 0 647.63626 632.17383\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M687.3279,276.08691H512.81813a15.01828,15.01828,0,0,0-15,15v387.85l-2,.61005-42.81006,13.11a8.00676,8.00676,0,0,1-9.98974-5.31L315.678,271.39691a8.00313,8.00313,0,0,1,5.31006-9.99l65.97022-20.2,191.25-58.54,65.96972-20.2a7.98927,7.98927,0,0,1,9.99024,5.3l32.5498,106.32Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#f2f2f2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M725.408,274.08691l-39.23-128.14a16.99368,16.99368,0,0,0-21.23-11.28l-92.75,28.39L380.95827,221.60693l-92.75,28.4a17.0152,17.0152,0,0,0-11.28028,21.23l134.08008,437.93a17.02661,17.02661,0,0,0,16.26026,12.03,16.78926,16.78926,0,0,0,4.96972-.75l63.58008-19.46,2-.62v-2.09l-2,.61-64.16992,19.65a15.01489,15.01489,0,0,1-18.73-9.95l-134.06983-437.94a14.97935,14.97935,0,0,1,9.94971-18.73l92.75-28.4,191.24024-58.54,92.75-28.4a15.15551,15.15551,0,0,1,4.40966-.66,15.01461,15.01461,0,0,1,14.32032,10.61l39.0498,127.56.62012,2h2.08008Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#3f3d56\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M398.86279,261.73389a9.0157,9.0157,0,0,1-8.61133-6.3667l-12.88037-42.07178a8.99884,8.99884,0,0,1,5.9712-11.24023l175.939-53.86377a9.00867,9.00867,0,0,1,11.24072,5.9707l12.88037,42.07227a9.01029,9.01029,0,0,1-5.9707,11.24072L401.49219,261.33887A8.976,8.976,0,0,1,398.86279,261.73389Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#666\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 190.15351,\n    cy: 24.95465,\n    r: 20,\n    fill: \"#666\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 190.15351,\n    cy: 24.95465,\n    r: 12.66462,\n    fill: \"#fff\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M878.81836,716.08691h-338a8.50981,8.50981,0,0,1-8.5-8.5v-405a8.50951,8.50951,0,0,1,8.5-8.5h338a8.50982,8.50982,0,0,1,8.5,8.5v405A8.51013,8.51013,0,0,1,878.81836,716.08691Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#e6e6e6\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M723.31813,274.08691h-210.5a17.02411,17.02411,0,0,0-17,17v407.8l2-.61v-407.19a15.01828,15.01828,0,0,1,15-15H723.93825Zm183.5,0h-394a17.02411,17.02411,0,0,0-17,17v458a17.0241,17.0241,0,0,0,17,17h394a17.0241,17.0241,0,0,0,17-17v-458A17.02411,17.02411,0,0,0,906.81813,274.08691Zm15,475a15.01828,15.01828,0,0,1-15,15h-394a15.01828,15.01828,0,0,1-15-15v-458a15.01828,15.01828,0,0,1,15-15h394a15.01828,15.01828,0,0,1,15,15Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#3f3d56\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M801.81836,318.08691h-184a9.01015,9.01015,0,0,1-9-9v-44a9.01016,9.01016,0,0,1,9-9h184a9.01016,9.01016,0,0,1,9,9v44A9.01015,9.01015,0,0,1,801.81836,318.08691Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#666\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 433.63626,\n    cy: 105.17383,\n    r: 20,\n    fill: \"#666\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 433.63626,\n    cy: 105.17383,\n    r: 12.18187,\n    fill: \"#fff\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawNoDataReKwbl);\nexport default __webpack_public_path__ + \"static/media/undraw_No_data_re_kwbl.baef8820.svg\";\nexport { ForwardRef as ReactComponent };","export interface AngleLimitedLight {\r\n    angleRelativeTo: string;\r\n    minVisibilityAngleDeg: number;\r\n    maxVisibilityAngleDeg: number;\r\n}\r\n\r\nexport interface LightsDescriptor {\r\n    angleLimitedLights: Record<string, AngleLimitedLight>;\r\n}\r\n\r\nexport const emptyDescriptor: LightsDescriptor = {\r\n    angleLimitedLights: {},\r\n};\r\n","import React, { useCallback, useLayoutEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFrame, useThree } from '@react-three/fiber';\r\nimport { Environment, Sky, OrbitControls } from '@react-three/drei';\r\nimport { Bloom, EffectComposer } from '@react-three/postprocessing';\r\nimport debounce from 'lodash/debounce';\r\nimport starsPx from 'assets/Real Stars Skybox/px.png';\r\nimport starsNx from 'assets/Real Stars Skybox/nx.png';\r\nimport starsPy from 'assets/Real Stars Skybox/py.png';\r\nimport starsNy from 'assets/Real Stars Skybox/ny.png';\r\nimport starsPz from 'assets/Real Stars Skybox/pz.png';\r\nimport starsNz from 'assets/Real Stars Skybox/nz.png';\r\nimport { currentSceneParams } from 'store/Scenes/selectors';\r\nimport { WaterReplacer } from 'components/WaterReplacer';\r\nimport { updateSceneParams } from 'store/Scenes/actions';\r\nimport { Vector3 } from 'three';\r\nimport sceneMap from 'scenes';\r\nimport { useAngleLimitedLights } from './ThreeHooks/useAngleLimitedLights';\r\nimport { emptyDescriptor } from './ThreeHooks/lightsDescriptor';\r\n\r\ninterface SceneBaseProps {\r\n    sceneId: string;\r\n}\r\n\r\nexport const SceneBase: React.FC<SceneBaseProps> = ({ sceneId, children }) => {\r\n    const { scene, camera } = useThree();\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isNight,\r\n        backgroundEnabled,\r\n        freeCameraEnabled,\r\n        cameraHeight,\r\n        angle,\r\n        distance,\r\n    } = useSelector(currentSceneParams);\r\n\r\n    const model = scene.getObjectByName('Statek');\r\n    const target = useMemo(() => new Vector3(0, 0, 0), []);\r\n\r\n    useAngleLimitedLights(sceneMap.get(sceneId)?.lightsDescriptor ?? emptyDescriptor);\r\n\r\n    useLayoutEffect(() => {\r\n        if (!freeCameraEnabled) {\r\n            if (cameraHeight > 60) {\r\n                dispatch(updateSceneParams({\r\n                    cameraHeight: 60,\r\n                }));\r\n            }\r\n\r\n            const dir = model?.getWorldDirection(new Vector3()) ?? new Vector3(1, 0, 0);\r\n\r\n            const len = camera.position.length();\r\n            const pos = dir\r\n                .applyAxisAngle(new Vector3(0, 1, 0), angle - Math.PI / 2)\r\n                // .applyAxisAngle(camera.position.clone().cross(camera.up), Math.asin(cameraHeight / len));\r\n                .multiplyScalar(len);\r\n\r\n            camera.position.copy(pos);\r\n\r\n            camera.position.y = cameraHeight;\r\n            camera.position.multiplyScalar(len / camera.position.length());\r\n            camera.position.multiplyScalar(distance / camera.position.length());\r\n\r\n            camera.lookAt(target);\r\n        }\r\n    }, [\r\n        model,\r\n        freeCameraEnabled,\r\n        angle,\r\n        camera,\r\n        cameraHeight,\r\n        target,\r\n        sceneId,\r\n        dispatch,\r\n        distance,\r\n    ]);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const handleCameraMovement = useCallback(\r\n        debounce(() => {\r\n            const pos = camera.position;\r\n\r\n            const dir = model?.getWorldDirection(new Vector3()) ?? new Vector3(1, 0, 0);\r\n\r\n            dispatch(updateSceneParams({\r\n                angle: new Vector3(pos.x, 0, pos.z).angleTo(dir) + Math.PI / 2,\r\n                cameraHeight: pos.y,\r\n                distance: pos.length(),\r\n            }));\r\n        }, 200),\r\n        [],\r\n    );\r\n\r\n    useFrame(() => {\r\n        if (camera.position.y < 3)\r\n            camera.position.y = 3;\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { children }\r\n            {/* <axesHelper scale={[500, 500, 500]} /> */}\r\n            <EffectComposer depthBuffer autoClear disableNormalPass>\r\n                {isNight ? <Bloom luminanceThreshold={0} luminanceSmoothing={0.0001} /> : <React.Fragment />}\r\n            </EffectComposer>\r\n            {isNight ? (\r\n                <React.Fragment>\r\n                    {backgroundEnabled && <Environment files={[starsPx, starsNx, starsPy, starsNy, starsPz, starsNz]} background />}\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    <Sky\r\n                        // @ts-ignore - wrong typings\r\n                        scale={10000}\r\n                        inclination={0.65}\r\n                        rayleigh={0.1}\r\n                        mieCoefficient={0.02}\r\n                        azimuth={(3 * Math.PI) / 2}\r\n                        turbidity={0.05}\r\n                    />\r\n                    <WaterReplacer placeholderName=\"Woda\" waterColor=\"#000000\" sunColor=\"#222222\" />\r\n                    <ambientLight intensity={0.4} />\r\n                    <pointLight position={[100, 100, 100]} />\r\n                </React.Fragment>\r\n            )}\r\n            {freeCameraEnabled && (\r\n                <OrbitControls\r\n                    target={target}\r\n                    enablePan={false}\r\n                    enableDamping={false}\r\n                    rotateSpeed={0.9}\r\n                    maxPolarAngle={Math.PI / 2}\r\n                    minDistance={40}\r\n                    maxDistance={5200}\r\n                    onChange={handleCameraMovement}\r\n                />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import { useFrame, useThree } from '@react-three/fiber';\r\nimport { useMemo } from 'react';\r\nimport { directedAngle } from 'scenes/directedAngle';\r\nimport {\r\n    BufferGeometry,\r\n    Mesh,\r\n    MeshStandardMaterial,\r\n    Object3D,\r\n    Vector3,\r\n} from 'three';\r\nimport { degToRad } from 'three/src/math/MathUtils';\r\nimport { LightsDescriptor } from './lightsDescriptor';\r\n\r\nexport const useAngleLimitedLights = ({ angleLimitedLights }: LightsDescriptor) => {\r\n    const state = useThree();\r\n\r\n    const lights = useMemo(() => {\r\n        const { scene } = state;\r\n\r\n        const res: Mesh<BufferGeometry, MeshStandardMaterial>[] = [];\r\n\r\n        const lightNames = Object.keys(angleLimitedLights);\r\n\r\n        scene.traverse(obj => {\r\n            const names = lightNames.filter(lightName => obj.name.startsWith(lightName));\r\n            if (\r\n                obj instanceof Mesh\r\n                    && obj.material instanceof MeshStandardMaterial\r\n                    && names.length > 0\r\n            ) {\r\n                [obj.name] = names;\r\n                res.push(obj);\r\n            }\r\n        });\r\n\r\n        for (const light of res) {\r\n            const limits = angleLimitedLights[light.name];\r\n            const name = limits.angleRelativeTo;\r\n            const obj = scene.getObjectByName(name);\r\n\r\n            if (!obj)\r\n                console.warn(`AngleRelativeTo: Object with name \"${name}\" not found in the scene`);\r\n            else\r\n                light.userData.angleRelativeTo = obj;\r\n        }\r\n\r\n        return res;\r\n    }, [angleLimitedLights, state]);\r\n\r\n    useFrame(({ camera }) => {\r\n        const cameraPos = camera.getWorldPosition(new Vector3());\r\n\r\n        for (const light of lights) {\r\n            const relativeTo = light.userData.angleRelativeTo as Object3D | undefined;\r\n            const limits = angleLimitedLights[light.name];\r\n\r\n            const pos = relativeTo?.getWorldPosition(new Vector3()).setY(0) ?? new Vector3(0, 0, 0);\r\n            const direction = (relativeTo?.getWorldDirection(new Vector3()) ?? new Vector3(1, 0, 0))\r\n                .applyAxisAngle(new Vector3(0, 1, 0), Math.PI / 2);\r\n\r\n            const ray = cameraPos.clone().setY(0).sub(pos);\r\n            const angle = directedAngle(ray, direction);\r\n\r\n            const minAngle = degToRad(limits.minVisibilityAngleDeg);\r\n            const maxAngle = degToRad(limits.maxVisibilityAngleDeg);\r\n\r\n            if (minAngle < maxAngle) {\r\n                if (minAngle < angle && angle < maxAngle) {\r\n                    if (!light.visible)\r\n                        light.visible = true;\r\n                } else if (light.visible) {\r\n                    light.visible = false;\r\n                }\r\n            } else if (minAngle < angle || angle < maxAngle) {\r\n                if (!light.visible)\r\n                    light.visible = true;\r\n            } else if (light.visible) {\r\n                light.visible = false;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n// const useSceneEmissiveObjects = () => {\r\n//     const scene = useThree(s => s.scene);\r\n\r\n//     return useMemo(() => {\r\n//         const objs: MutableRefObject<Mesh<BufferGeometry, MeshStandardMaterial>>[] = [];\r\n\r\n//         scene.traverse(obj => {\r\n//             if (\r\n//                 obj instanceof Mesh\r\n//                 && obj.material instanceof MeshStandardMaterial\r\n//                 && (\r\n//                     obj.material.emissive.r > 0\r\n//                     || obj.material.emissive.g > 0\r\n//                     || obj.material.emissive.b > 0\r\n//                 )\r\n//                 && obj.material.emissiveIntensity > 0\r\n//             )\r\n//                 objs.push({ current: obj });\r\n//         });\r\n\r\n//         return objs;\r\n//     }, [scene]);\r\n// };\r\n","import { Vector3 } from 'three';\r\n\r\nexport const directedAngle = (a: Vector3, b: Vector3): number => Math.atan2(a.x * b.z - a.z * b.x, a.x * b.x + a.z * b.z);\r\n","import { useContextBridge } from '@react-three/drei';\r\nimport { Canvas as OriginalCanvas } from '@react-three/fiber';\r\nimport React from 'react';\r\nimport { Provider, ReactReduxContext } from 'react-redux';\r\nimport store from 'store';\r\n\r\nexport const Canvas: React.FC<React.ComponentProps<typeof OriginalCanvas>> = ({ children, ...props }) => {\r\n    const ContextBridge = useContextBridge(ReactReduxContext);\r\n\r\n    return (\r\n        // eslint-disable-next-line react/jsx-props-no-spreading\r\n        <OriginalCanvas {...props}>\r\n            <ContextBridge>\r\n                <Provider store={store}>\r\n                    {children}\r\n                </Provider>\r\n            </ContextBridge>\r\n        </OriginalCanvas>\r\n    );\r\n};\r\n","import React from 'react';\nimport Button from 'react-bootstrap/esm/Button';\nimport { AiOutlineCheck, AiOutlineClose } from 'react-icons/ai';\n\nexport interface CheckboxProps extends React.HTMLAttributes<HTMLInputElement> {\n    checked?: boolean;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({ checked, ...rest }) => (\n    <Button\n        active={checked}\n        variant=\"outline-primary\"\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...rest}\n    >\n        {checked ? <AiOutlineCheck /> : <AiOutlineClose />}\n    </Button>\n);\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nexport const ButtonBase = styled(Button)`\n    font-size: 24px;\n    padding: 2px 8px;\n\n    svg {\n        margin-bottom: 2px;\n    }\n`;\n\n// Produces an internal TS error - union too complex to represent\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const DayButton = styled(ButtonBase)`\n    &.active, &:hover {\n        background-color: #FFD000;\n        border-color: #FFD000;\n        color: #505050;\n    }\n    border-color: #AF8C00;\n    color: #AF8C00;\n`;\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const NightButton = styled(ButtonBase)`\n    &.active, &:hover {\n        background-color: #260072;\n        border-color: #260072;\n    }\n    border-color: #260072;\n    color: #260072;\n`;\n\nexport const FormContentWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-row-gap: 8px;\n`;\n","import React, { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { IoIosCloudyNight, IoIosSunny } from 'react-icons/io';\r\nimport { currentSceneParams } from 'store/Scenes/selectors';\r\nimport { ClassNameProps } from 'utils/classNameProps';\r\nimport { updateSceneParams } from 'store/Scenes/actions';\r\nimport { degToRad, radToDeg } from 'three/src/math/MathUtils';\r\nimport { Checkbox } from 'components/Checkbox';\r\nimport { DayButton, NightButton, FormContentWrapper } from './parts';\r\n\r\ninterface ControlsProps extends ClassNameProps {\r\n    sceneId: string;\r\n}\r\n\r\nexport const Controls: React.FC<ControlsProps> = ({ sceneId, className }) => {\r\n    const dispatch = useDispatch();\r\n    const params = useSelector(currentSceneParams);\r\n\r\n    if (!params)\r\n        return null;\r\n\r\n    return (\r\n        <Form className={className}>\r\n            <FormContentWrapper>\r\n\r\n                <Form.Label>Pora dnia</Form.Label>\r\n                <ButtonGroup>\r\n                    <DayButton\r\n                        variant=\"outline-primary\"\r\n                        active={!params.isNight}\r\n                        onClick={() => {\r\n                            if (params.isNight) {\r\n                                dispatch(updateSceneParams({\r\n                                    isNight: false,\r\n                                }));\r\n                            }\r\n                        }}\r\n                        title=\"Dzień\"\r\n                    >\r\n                        <IoIosSunny />\r\n                    </DayButton>\r\n                    <NightButton\r\n                        variant=\"outline-primary\"\r\n                        active={params.isNight}\r\n                        onClick={() => {\r\n                            if (!params.isNight) {\r\n                                dispatch(updateSceneParams({\r\n                                    isNight: true,\r\n                                }));\r\n                            }\r\n                        }}\r\n                        title=\"Noc\"\r\n                    >\r\n                        <IoIosCloudyNight />\r\n                    </NightButton>\r\n                </ButtonGroup>\r\n                <Form.Label htmlFor=\"background\">Pokaż gwiazdy</Form.Label>\r\n                <Checkbox\r\n                    onClick={() => dispatch(updateSceneParams({ backgroundEnabled: !params.backgroundEnabled }))}\r\n                    checked={params.backgroundEnabled}\r\n                />\r\n                <Form.Label>Swobodna kamera</Form.Label>\r\n                <Checkbox\r\n                    onClick={() => dispatch(updateSceneParams({ freeCameraEnabled: !params.freeCameraEnabled }))}\r\n                    checked={params.freeCameraEnabled}\r\n                />\r\n                <Form.Label>Kąt do patrzącego (stopnie)</Form.Label>\r\n                <div>\r\n                    <Form.Control\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"360\"\r\n                        step=\"0.1\"\r\n                        value={radToDeg(params.angle)}\r\n                        onChange={e => dispatch(updateSceneParams({ angle: degToRad(+e.target.value) }))}\r\n                        disabled={params.freeCameraEnabled}\r\n                    />\r\n                    &nbsp;{Math.round(radToDeg(params.angle)) - 180}&#176;\r\n                </div>\r\n                <Form.Label>Wysokość kamery</Form.Label>\r\n                <div>\r\n                    <Form.Control\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"60\"\r\n                        step=\"0.1\"\r\n                        value={params.cameraHeight}\r\n                        onChange={e => dispatch(updateSceneParams({ cameraHeight: +e.target.value }))}\r\n                        disabled={params.freeCameraEnabled}\r\n                    />\r\n                    &nbsp;{Math.round(params.cameraHeight)}m\r\n                </div>\r\n                <Form.Label>Odległość</Form.Label>\r\n                <div>\r\n                    <Form.Control\r\n                        type=\"range\"\r\n                        min=\"65\"\r\n                        max=\"600\"\r\n                        step=\"1\"\r\n                        value={params.distance}\r\n                        onChange={e => dispatch(updateSceneParams({ distance: +e.target.value }))}\r\n                        disabled={params.freeCameraEnabled}\r\n                    />\r\n                    &nbsp;{Math.round(params.distance)}m\r\n                </div>\r\n            </FormContentWrapper>\r\n        </Form>\r\n    );\r\n};\r\n","import styled, { css } from 'styled-components';\r\nimport { Controls as OriginalControls } from 'components/Controls';\r\nimport { Html as OriginalHtml } from '@react-three/drei';\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: black;\r\n\r\n    position: relative;\r\n`;\r\n\r\nexport const DrawerHandle = styled.div`\r\n    color: white;\r\n    padding: 12px 18px;\r\n    font-size: 32px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    cursor: pointer;\r\n\r\n    transition: all 0.2s ease-in-out;\r\n`;\r\n\r\nexport const ControlsDrawer = styled.div<{ open: boolean; handleHeight: number }>`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 2;\r\n\r\n    transition: transform 0.2s ease-in-out;\r\n\r\n    ${DrawerHandle} {\r\n        height: ${({ handleHeight }) => handleHeight}px;\r\n    }\r\n\r\n    ${({ open, handleHeight }) => !open && css`\r\n        transform: translateY(calc(-100% + ${handleHeight}px));\r\n    `}\r\n`;\r\n\r\nexport const Controls = styled(OriginalControls)`\r\n    padding: 12px 18px;\r\n    background: white;\r\n    border-bottom-left-radius: 3px;\r\n`;\r\n\r\nexport const Html = styled(OriginalHtml)`\r\n    background: black;\r\n    /* padding: 12px; */\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n`;\r\n\r\nconst ChildrenWrapper = styled.div`\r\n    width: 100%;\r\n    color: white;\r\n    margin-top: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst AnimationWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-template-rows: repeat(4, 1fr);\r\n    grid-gap: 1px;\r\n\r\n    width: 100px;\r\n    height: 100px;\r\n\r\n    /* width: 100%; */\r\n`;\r\n\r\nconst Box = styled.div<{ delay: string }>`\r\n    background: transparent;\r\n    color:white;\r\n\r\n    animation: fade 2s infinite;\r\n    animation-delay: ${({ delay }) => delay};\r\n\r\n    @keyframes fade {\r\n        0% {\r\n            background: transparent;\r\n        }\r\n        25% {\r\n            background: white;\r\n        }\r\n        50%, 100% {\r\n            background: transparent;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Loader: React.FC = ({ children }) => (\r\n    <Wrapper>\r\n        <AnimationWrapper>\r\n            { /* eslint-disable-next-line react/no-array-index-key */ }\r\n            {new Array(16).fill(0).map((_, i) => <Box key={i} delay={`${((i % 4) + Math.floor(i / 4)) * 140}ms`} />)}\r\n        </AnimationWrapper>\r\n        <ChildrenWrapper>{children ?? 'Ładowanie...'}</ChildrenWrapper>\r\n    </Wrapper>\r\n);\r\n","import { Html, useProgress } from '@react-three/drei';\nimport { Loader } from 'components/Loader';\nimport React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n\nexport const SceneLoader: React.FC = () => {\n    const { active, progress } = useProgress();\n\n    return (\n        <Html center>\n            <Loader>\n                Ładowanie...\n                <br />\n                {active && (\n                    <React.Fragment>\n                        {(progress).toFixed(0)}%\n                        <ProgressBar now={progress} />\n                    </React.Fragment>\n                )}\n            </Loader>\n        </Html>\n    );\n};\n","import React, { Suspense, useEffect, useState } from 'react';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AiOutlineControl } from 'react-icons/ai';\r\nimport { Loader } from 'components/Loader';\r\nimport sceneMap from 'scenes';\r\nimport { loadScene } from 'store/Scenes/actions';\r\nimport { SceneBase } from 'scenes/SceneBase';\r\nimport { Canvas } from 'components/Canvas';\r\nimport { useQueryParams } from 'utils/hooks';\r\nimport { lightSetParamName, noControlsParamName } from 'appConstants';\r\nimport {\r\n    ControlsDrawer,\r\n    DrawerHandle,\r\n    Wrapper,\r\n    Controls,\r\n    Html,\r\n} from './parts';\r\nimport { SceneLoader } from './SceneLoader';\r\n\r\ninterface SceneViewRouteParams {\r\n    id?: string;\r\n}\r\n\r\nexport const SceneView: React.FC = () => {\r\n    const { id } = useParams<SceneViewRouteParams>();\r\n    const [areControlsOpen, setAreControlsOpen] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const queryParams = useQueryParams();\r\n\r\n    useEffect(() => {\r\n        if (id && sceneMap.has(id) && queryParams.has(lightSetParamName)) {\r\n            // Checked if it is not null just above\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            dispatch(loadScene(sceneMap.get(id)!));\r\n        }\r\n\r\n    // this effect should not trigger if scenes are modified\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, id]);\r\n\r\n    if (!id || !sceneMap.has(id))\r\n        return <Redirect to=\"/\" />;\r\n\r\n    const Model = sceneMap.get(id)?.component ?? React.Fragment;\r\n\r\n    return (\r\n        <Wrapper>\r\n            {!queryParams.has(noControlsParamName) && (\r\n                <ControlsDrawer open={areControlsOpen} handleHeight={40}>\r\n                    <Controls sceneId={id} />\r\n                    <DrawerHandle\r\n                        onClick={() => setAreControlsOpen(state => !state)}\r\n                        title=\"Ustawienia sceny\"\r\n                    >\r\n                        <AiOutlineControl />\r\n                    </DrawerHandle>\r\n                </ControlsDrawer>\r\n            )}\r\n            <Canvas camera={{ position: [140, 26, -262], aspect: 70, near: 0.01, far: 100000 }} gl={{ logarithmicDepthBuffer: true }}>\r\n                <Suspense fallback={<SceneLoader />}>\r\n                    <SceneBase sceneId={id}>\r\n                        <Model />\r\n                    </SceneBase>\r\n                </Suspense>\r\n            </Canvas>\r\n        </Wrapper>\r\n    );\r\n};\r\n","import { useLocation } from 'react-router';\r\n\r\nexport const useQueryParams = () => new URLSearchParams(useLocation().search);\r\n","export const lightSetParamName = 'set';\r\nexport const noControlsParamName = 'noControls';\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const InvisibleLink = styled(Link)`\r\n    color: inherit;\r\n    text-decoration: inherit;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ReactComponent } from 'assets/undraw_No_data_re_kwbl.svg';\r\nimport OriginalCard from 'react-bootstrap/esm/Card';\r\nimport { InvisibleLink } from 'components/InvisibleLink';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 12px 24px;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    font-size: 24px;\r\n    text-align: center;\r\n    margin-bottom: 32px;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n    padding: 8px 12px;\r\n    width: 90%;\r\n    border: 1px solid transparent;\r\n    border-bottom: 2px solid #777;\r\n`;\r\n\r\nexport const CardsWrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    > * {\r\n        width: 300px;\r\n        margin-right: 8px;\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport const NoResultsWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    margin-top: 32px;\r\n    text-align: center;\r\n    color: #888;\r\n`;\r\n\r\nexport const NoResultsIcon = styled(ReactComponent)`\r\n    max-width: 200px;\r\n    max-height: 200px;\r\n    margin-bottom: 21px;\r\n    margin-right: 14px;\r\n`;\r\n\r\nexport const HorizontalCardBody = styled(OriginalCard.Body)`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    min-height: 130px;\r\n\r\n    .card-text {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const WholeCardLink = styled(InvisibleLink)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const CardStyleWrapper = styled.div`\r\n    .card {\r\n        position: relative;\r\n        height: 100%;\r\n        max-height: 400px;\r\n\r\n        &:hover {\r\n            color: #0a58ca;\r\n        }\r\n\r\n        a:not(${WholeCardLink}) {\r\n            z-index: 3;\r\n        }\r\n\r\n        img {\r\n            object-fit: contain;\r\n            background: black;\r\n            height: 100%;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const InnerLink = styled.a`\r\n    font-size: 24px;\r\n    color: initial;\r\n    margin-left: 8px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n`;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { BiLinkExternal } from 'react-icons/bi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport sceneMap from 'scenes';\r\nimport { withDefault } from 'utils/withDefault';\r\nimport { loadScene } from 'store/Scenes/actions';\r\nimport {\r\n    Header,\r\n    Wrapper,\r\n    CardsWrapper,\r\n    SearchInput,\r\n    NoResultsWrapper,\r\n    NoResultsIcon,\r\n    HorizontalCardBody,\r\n    CardStyleWrapper,\r\n    WholeCardLink,\r\n    InnerLink,\r\n} from './parts';\r\n\r\nexport const ListView: React.FC = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onKeyPress = useCallback((e: KeyboardEvent) => {\r\n        if (e.key === 'Escape' && inputRef.current === document.activeElement)\r\n            setSearchText('');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', onKeyPress);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', onKeyPress);\r\n        };\r\n    }, [onKeyPress]);\r\n\r\n    const openSceneInNewWindow = (id: string) => (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (!sceneMap.has(id))\r\n            return;\r\n\r\n        // checked above\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        dispatch(loadScene(sceneMap.get(id)!));\r\n        window.open(\r\n            `/scene/${id}?noControls`,\r\n            'scene',\r\n            // eslint-disable-next-line no-restricted-globals\r\n            `height=${screen.availHeight},width=${screen.availWidth},fullscreen=yes,toolbar=no,menubar=no,scrollbars=no,resizable=yes,location=no,directories=no,status=no`,\r\n        );\r\n\r\n        dispatch(push('/controls'));\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <SearchInput\r\n                    ref={inputRef}\r\n                    type=\"text\"\r\n                    placeholder=\"Szukaj...\"\r\n                    value={searchText}\r\n                    onChange={e => setSearchText(e.target.value)}\r\n                />\r\n            </Header>\r\n            <CardsWrapper>\r\n                {\r\n                    withDefault(\r\n                        Array.from(sceneMap.values())\r\n                            .filter(({ name }) => name.toLowerCase().includes(searchText.trim().toLowerCase()))\r\n                            .map(({ name, id, iconPath }) => (\r\n                                <CardStyleWrapper key={id}>\r\n                                    <Card>\r\n                                        <WholeCardLink to={`/scene/${id}`} />\r\n                                        <Card.Img variant=\"top\" src={iconPath} />\r\n                                        <HorizontalCardBody>\r\n                                            <Card.Text>{name}</Card.Text>\r\n                                            <InnerLink\r\n                                                title=\"Otwórz w nowym oknie\"\r\n                                                onClick={openSceneInNewWindow(id)}\r\n                                            >\r\n                                                <BiLinkExternal />\r\n                                            </InnerLink>\r\n                                        </HorizontalCardBody>\r\n                                    </Card>\r\n                                </CardStyleWrapper>\r\n                            )),\r\n                        (\r\n                            <NoResultsWrapper>\r\n                                <NoResultsIcon />\r\n                                <h2>Pusto</h2>\r\n                            </NoResultsWrapper>\r\n                        ),\r\n                    )\r\n                }\r\n            </CardsWrapper>\r\n        </Wrapper>\r\n    );\r\n};\r\n","export const withDefault = <T, U = T>(arr: T[], def: U) => (arr.length > 0 ? arr : def);\r\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    padding: 12px 24px;\n    max-width: 700px;\n    margin: 0 auto;\n`;\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Controls } from 'components/Controls';\r\nimport { currentSceneDesc } from 'store/Scenes/selectors';\r\nimport { Wrapper } from './parts';\r\n\r\nexport const ControlsView: React.FC = () => {\r\n    const desc = useSelector(currentSceneDesc);\r\n\r\n    if (!desc)\r\n        return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n        <Wrapper>\r\n            <h3>{desc.name}</h3>\r\n            <Controls sceneId={desc.id} />\r\n        </Wrapper>\r\n    );\r\n};\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport * as Views from './views';\nimport { history } from './store';\n\nconst App: React.FC = () => (\n    <ConnectedRouter history={history}>\n        <Switch>\n            <Route path=\"/controls\" component={Views.ControlsView} />\n            <Route path=\"/scene/:id\" component={Views.SceneView} />\n            <Route path=\"/\" component={Views.ListView} />\n        </Switch>\n    </ConnectedRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport store from './store';\nimport App from './App';\n\nconst GlobalStyle = createGlobalStyle`\n    *, *::after, *::before {\n        box-sizing: border-box;\n    }\n\n    body {\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n        sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n        monospace;\n    }\n`;\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <GlobalStyle />\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}